<!--
}


async function reRecord(){
// revoke preview url if any
try{ if(preview.src && preview.src.startsWith('blob:')) URL.revokeObjectURL(preview.src);}catch(e){}
recordedBlobs = [];
recordedFile = null;
fileInfo.textContent = 'لا يوجد';
playBtn.disabled = true;
reRecordBtn.disabled = true;
sendBtn.disabled = true;
preview.srcObject = mediaStream;
preview.controls = false;
await preview.play();
logStatus('أعد التسجيل عند الضغط ابدأ');
}


// -------- Upload to n8n webhook --------
async function sendToServer(){
if(!recordedFile){ alert('لا يوجد تسجيل لإرساله'); return; }
const name = document.getElementById('name').value || 'Anonymous';
const email = document.getElementById('email').value || '';
const note = document.getElementById('note').value || '';


const formData = new FormData();
formData.append('name', name);
formData.append('email', email);
formData.append('note', note);
// attach file
formData.append('file', recordedFile, `response_${Date.now()}.webm`);


try{
sendBtn.disabled = true;
updateProgress(0);
logStatus('جاري رفع الملف...');


const resp = await fetch(WEBHOOK_URL, {
method: 'POST',
body: formData
});


if(resp.ok){
logStatus('تم الرفع بنجاح. شكرًا لك!');
updateProgress(100);
// optionally reset
// reRecord();
} else {
console.error('Upload failed', resp.statusText);
logStatus('فشل الرفع — حاول مرة أخرى.');
sendBtn.disabled = false;
}
} catch(err){
console.error(err);
logStatus('خطأ أثناء الرفع — تحقق من اتصال الإنترنت وURL الخاص بالـ webhook.');
sendBtn.disabled = false;
}
}


// -------- Attach events --------
startBtn.addEventListener('click', () => startRecording());
stopBtn.addEventListener('click', () => stopRecording());
playBtn.addEventListener('click', () => playRecording());
reRecordBtn.addEventListener('click', () => reRecord());
sendBtn.addEventListener('click', () => sendToServer());


// Initialize camera on load
window.addEventListener('load', async () => {
await initCamera();
});


// Clean up on unload
window.addEventListener('beforeunload', () => {
if(mediaStream){
mediaStream.getTracks().forEach(t => t.stop());
}
});
</script>
</body>
</html>
